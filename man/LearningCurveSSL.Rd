% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/ErrorCurve.R
\name{LearningCurveSSL}
\alias{LearningCurveSSL}
\title{Generate Semi-Supervised learning curve.}
\usage{
LearningCurveSSL(X, y, classifiers, measures = list(Accuracy =
  measure_accuracy), type = "unlabeled", n_l, with_replacement = FALSE,
  sizes = 2^(1:8), n_test = 1000, repeats = 100, verbose = FALSE,
  n_min = 1, dataset_name = NULL)
}
\arguments{
\item{X}{design matrix}

\item{y}{vector of labels}

\item{classifiers}{list; Classifiers to crossvalidate}

\item{type}{Type of learning curve, either "unlabeled" or "fraction"}

\item{n_l}{Number of labeled objects to be used in the experiments}

\item{with_replacement}{Indicated whether the subsampling is done with replacement or not (default: FALSE)}

\item{sizes}{vector with number of unlabeled objects for which to evaluate performance}

\item{n_test}{Number of test points if with_replacement is TRUE}

\item{repeats}{Number of learning curves to draw}

\item{verbose}{Print progressbar during execution (default: FALSE)}

\item{n_min}{Minimum number of labeled objects per class in}

\item{dataset_name}{character; Name of the dataset}

\item{fracs}{list; fractions of labeled data to use}

\item{test_fraction}{numeric; If not NULL a fraction of the object will be left out to serve as the test set}
}
\value{
LearningCurve object
}
\description{
Evaluate semi-supervised classifiers for different amounts of unlabeled training examples or different fractions of unlabeled vs. labeled examples.
}
\examples{
X <- model.matrix(Species~.-1,data=iris)
y <- iris$Species

classifiers <- list("LS"=function(X,y,X_u,y_u) {LeastSquaresClassifier(X,y,lambda=0)},
                    "RLS"=function(X,y,X_u,y_u) {LeastSquaresClassifier(X,y,lambda=10)})
measures <- list("Accuracy" =  measure_accuracy,
                 "Loss" = measure_losstest,
                 "Loss labeled" = measure_losslab,
                 "Loss Lab+Unlab" = measure_losstrain
                 )
lc <- LearningCurveSSL(X,y,classifiers=classifiers,measures=measures,n_l=10,repeats=5)
print(lc)
plot(lc)
}

