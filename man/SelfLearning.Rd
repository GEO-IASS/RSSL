% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SelfLearning.R
\name{SelfLearning}
\alias{SelfLearning}
\title{Self-Learning approach to Semi-supervised Learning}
\usage{
SelfLearning(X, y, X_u = NULL, method, prob = FALSE, cautious = FALSE,
  max_iter = 100, ...)
}
\arguments{
\item{X}{Design matrix, intercept term is added within the function}

\item{y}{Vector or factor with class assignments}

\item{X_u}{Design matrix unlabeled data}

\item{method}{Supervised classifier to use. Any function that accepts as its first argument a design matrix X and as its second argument a vector of labels y.}

\item{prob}{If TRUE, run algorithm with soft labels, instead of hard labels}

\item{cautious}{logical; not implemented}

\item{max_iter}{integer; Maximum number of iterations}

\item{...}{additional arguments to be passed to method}
}
\description{
Use self-learning (also known as Yarowsky's algorithm or pseudo-labeling) to turn any supervised classifier into a semi-supervised method by iteratively labeling the unlabeled objects and adding these predictions to the set of labeled objects.
}
\examples{
data(testdata)
t_self <- SelfLearning(testdata$X,testdata$y,testdata$X_u,method=NearestMeanClassifier)
t_sup <- NearestMeanClassifier(testdata$X,testdata$y)
# Classification Error
1-mean(predict(t_self, testdata$X_test)==testdata$y_test) 
1-mean(predict(t_sup, testdata$X_test)==testdata$y_test) 
loss(t_self, testdata$X_test, testdata$y_test)
}

